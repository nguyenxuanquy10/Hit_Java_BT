

import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner; 
public class ManageStudent{
     private List<Student> ListStudent;
     private Write_Read_File DataFile; 
     public ManageStudent(){
         ListStudent = new ArrayList<>();
         DataFile= new Write_Read_File();
     }
     // FILE
     public void ReadFile1() throws Exception{
         DataFile.ReadFile(ListStudent);
     }
     public void WriteFile1() throws  Exception{
         DataFile.WriteFile(ListStudent);
     }
     public void HealthDeclaration1(Student student){
         student.HealthDeclaration();
     }
     public void AddInFormation(Student student){
         ListStudent.add(student);
     }
     public void UpdateWriteFile1() throws  Exception{
        DataFile.WriteFile(ListStudent);
    }
    //OUTPUT COMMON
    public void OutPutData(){
        ListStudent.forEach(System.out::println);
    }
    // SEARFCH BY ID
    public Student SearchById(String ID){
       Student result=ListStudent.stream().filter(o->o.getStudentId().equals(ID)).findFirst().orElse(null);
       if(result!=null){
        return result; 
       }
        else {
            System.out.println("INVALID DO NOT EXIST, INPUT AGAIN");
            return result; 
        }
    }
    //REMOVE BY ID
    public void RemoveById(String ID){
        Student result=ListStudent.stream().filter(o->o.getStudentId().equals(ID)).findFirst().orElse(null); 
        if(result!=null){
            ListStudent.remove(result);
        }
        else {
            System.out.println("INVALID DO NOT EXIST, INPUT AGAIN");
        }
    }
    // ADD  ONE STUDENT 
    public void AddOneStudent(Student student){
        ListStudent.add(student);
    }
    // ADD STUDENT LIST STUDENT
    public void AddListStudent(List<Student> result){
        ListStudent.addAll(result);
    }
    //SEARCH BY IDENTIFICATION
    public Student SearchByIdentification(String Identification){
        Student result=ListStudent.stream().filter(o->o.getStudentIdentification().equals(Identification)).findFirst().orElse(null);
        if(result!=null){
         return result; 
        }
         else {
             System.out.println("INVALID DO NOT EXIST, INPUT AGAIN");
             return result; 
         }
     }
     // REMOVE BY IDENTIFICATION
     public void RemoveByIdentification(String Identification){
         Student result=ListStudent.stream().filter(o->o.getStudentIdentification().equals(Identification)).findFirst().orElse(null); 
         if(result!=null){
             ListStudent.remove(result);
         }
         else {
             System.out.println("INVALID DO NOT EXIST, INPUT AGAIN");
         }
     }
     // SEARCH INFORMATION ABOUT STATUS F(INFECTED WITH VIRUS OR NONE)
    public void SearchStatusFStudent(String STATUSF){
        List<Student> result= new ArrayList<>();
        result=ListStudent.stream().filter(o->o.getStatusF().equals(STATUSF)).collect(Collectors.toList());
       if(result.size()==0){
           System.out.println("INVALID DO NOT EXIST, INPUT AGAIN");
       }
       else{
           System.out.println("----------THERE ARE "+ result.size()+ "FOR STASUS "+STATUSF+"----------");
           result.forEach(System.out::println);
       }
    }
    // SEARCH INFORMATION ABOUT STATUS HEALTH
    public void SearchStatusHealth(String STATUHEALTH){
        List<Student> result= new ArrayList<>();
        result=ListStudent.stream().filter(o->o.getStatusF().equals(STATUHEALTH)).collect(Collectors.toList());
       if(result.size()==0){
           System.out.println("INVALID DO NOT EXIST, INPUT AGAIN");
       }
       else{
           System.out.println("----------THERE ARE "+ result.size()+ "FOR STASUS "+STATUHEALTH+"----------");
           result.forEach(System.out::println);
       }
    }
    // SEARCh INFORMATION ABOUT SCHEDULE EXAM
    public void SearchScheduleExam(String ID){
        Student result=ListStudent.stream().filter(o->o.getStudentId().equals(ID)).findFirst().orElse(null); 
        if(result!=null){
            System.out.println(result.getScheduleExam());
        }
        else {
            System.out.println("INVALID DO NOT EXIST, INPUT AGAIN");
        }
    }
    // SEARCH INFORMATION ABOUT STATUS FINANCIAL
    public void SearchStatusFinancial(String ID){
        Student result=ListStudent.stream().filter(o->o.getStudentId().equals(ID)).findFirst().orElse(null); 
        if(result!=null){
            System.out.println(result.getStatusFinancial());
        }
        else {
            System.out.println("INVALID DO NOT EXIST, INPUT AGAIN");
        }
    }
    // SEARCH INFORMATION SCHEDULE SUBJECT 
    public void SearchScheduleSubject(String ID){
        Student result=ListStudent.stream().filter(o->o.getStudentId().equals(ID)).findFirst().orElse(null); 
        if(result!=null){
            System.out.println(result.getScheduleSubject());
        }
        else {
            System.out.println("INVALID DO NOT EXIST, INPUT AGAIN");
        }
    }
    // SEARCH STUDENT GOT SCHOLARSHIP
   public void AchievedScholarship(){
       List<Student> result = new ArrayList<>(); 
       result=ListStudent.stream().filter(o->o.getGPA()>8.0).collect(Collectors.toList());
       if(result.size()<0){
           System.out.println("THERE ARE :0 STUDENT ACHIEVED SCHOLARSHIP"); 
       }
       else {
           System.out.println("THERE ARE : "+result.size()+" ACHIEVED SHOLARSHIP"); 
           System.out.pritnln("----------LIST STUDENT GET ACHIEVED SHOLARSHIP--------- "); 
          result.forEach(o->System.out.println("FULL NAME: "+o.getFullName()+"-- STUDENT ID: "+o.getStudentId()));
       }
   }
   // SEARCH STUDENT GOT LOW GPA
   public void LOWGPA(){
    List<Student> result = new ArrayList<>(); 
    result=ListStudent.stream().filter(o->o.getGPA()<5.0).collect(Collectors.toList());
    if(result.size()<0){
        System.out.println("THERE ARE :0 STUDENT GOT LOW GPA"); 
    }
    else {
        System.out.println("THERE ARE : "+result.size()+" GOT LOW GPA"); 
        System.out.pritnln("----------LIST STUDENT GOT LOW GPA--------- "); 
       result.forEach(o->System.out.println("FULL NAME: "+o.getFullName()+"-- STUDENT ID: "+o.getStudentId()));
    }
  }
     // CHANGE INFORMATION STUDENT
     public void ChangeInformation(String ID){
          Student result=ListStudent.stream().filter(o->i.getStudentId.equals(ID)).findFirst().orElse(null); 
          if(result!=null){
              Scanner sc= new Scanner(System.in);
              int x1=1; 
              while(x){
                 MenuChangeInFormation(); 
                int x=sc.nextInt(); 
                 switch(x){
                     case 1:{
                         System.out.println("ENTER YOUR NEW ID: "); 
                         result.setStudentId(sc.nextLine());
                         break; 
                     }
                     case 2:{
                        System.out.println("ENTER YOUR  NEW SCHEDULE SUBJECT: ");
                        result.setScheduleSubject(sc.nextLine());
                        break; 
                    }
                    case 3:{
                        System.out.println("ENTER YOUR NEW SCHEDULE EXAM: ");
                        result.setScheduleExam(sc.nextLine());
                        break; 
                    }
                    case 4:{
                        System.out.println("ENTER NEW GPA");
                        result.setGPA(sc.nextDouble());
                        sc.nextLine();
                        break; 
                    }
                    case 5:{
                        System.out.println("ENTER NEW STATUS HEALTH");
                        result.setGPA(sc.nextLine());
                        break; 
                    }
                    case 6:{
                        System.out.println("ENTER NEW VACCINATE");
                        result.setGPA(sc.nextLine());
                        break; 
                    }
                    case 7:{
                        System.out.println("ENTER NEW STATUS F");
                        result.setGPA(sc.nextLine());
                        break; 
                    }
                    case 8:{
                        System.out.println("ENTER NEW FULL NAME");
                        result.setGPA(sc.nextLine());
                        break; 
                    }
                    case 9:{
                        System.out.println("ENTER NEW AGE");
                        result.setGPA(sc.nextLine());
                        break; 
                    }
                    case 10:{
                        System.out.println("ENTER NEW ADDRESS");
                        result.setGPA(sc.nextLine());
                        break; 
                    }
                    case 11:{
                        System.out.println("ENTER NEW GENDER");
                        result.setGPA(sc.nextLine());
                        break; 
                    }
                    case 12:{
                        System.out.println("ENTER NEW PHONE NUMBER");
                        result.setGPA(sc.nextLine());
                        break; 
                    }
                    case 13:{
                        System.out.println("ENTER NEW Identification");
                        result.setGPA(sc.nextLine());
                        break; 
                    }
                    case 14:{
                        System.out.println("ENTER NEW STATUS FINANCIAL");
                        result.setGPA(sc.nextLine());
                        break; 
                    }
                    case 15:{
                        x1=0;
                        break; 
                    }
                    default: {
                        System.out.pritnln("INVALID , INPUT AGAIN");
                    }
                 }
              }
              sc.nextLine(); 
              ListStudent.RemoveById(ID); 
              ListStudent.AddOneStudent(result);
        }
        else {
            System.out.println("INVALID DO NOT EXIST, INPUT AGAIN");
        }
     }
     // MENU CHANGE INFORMATION 
     public static MenuChangeInFormation(){
             System.out.println("1.CHANGE STUDENT ID");
             System.out.println("2.CHANGE SCHEDULE SUBJECT");
             System.out.println("3.CHANGE SCHEDULE EXAM");
             System.out.println("4.CHANGE GPA");
             System.out.println("5.CHANGE STATUS HEALTH");
             System.out.println("6.CHANGE VACCINATE");
             System.out.println("7.CHANGE STATUS F");
              System.out.println("8.CHANGE FULL NAME");
              System.out.println("9.CHANGE AGE");
              System.out.println("10.CHANGE ADDRESS");
             System.out.println("11.CHANGE GENDER");
              System.out.println("12.CHANGE PHONE NUMBER");
              System.out.println("13.CHANGE Identification");
              System.out.println("14.CHANGE STATUS FINANCIAL ");
              System.out.pritnln("15.FINANLY CHANGE INFORMATION");
     }
     // SORT BY GPA
     public void SortByGpa(){
         Collectors.sort(ListStudent,(Student1,Student2)->student1.getGPA().compareTO(Student2.getGPA())); 
     }
     //SORT BY NAME
     public void SortByName(){
        Collectors.sort(ListStudent, new Comparator<SinhVien>(){
               @Override
               public int compare(Student a, Student b){
                   String[] result1=a.getFullName().split(" "); 
                    String[] result2=b.getFullName().split(" ");
                    return result1[result1.length-1].compareTo(result2[result2.length-1]);
               }
        });
     }
     // SORT BY ID
     public void SortById(){
        Collectors.sort(ListStudent,(Student1,Student2)->student1.getStudentId().compareTO(Student2.getStudentId()));
     }
}
/////////////////////////////////
//////////////////////
/////////////////
package BTL_JAVA;
//import java.util.F
import java.util.List; 
import java.util.ArrayList;
import java.util.Arrays;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class Write_Read_File{
    private static final String NameFile="data.txt";
    public static void ReadFile(List<Student> result)  throws Exception{
        try {
            FileReader fr= new FileReader("data.txt");
            BufferedReader br= new BufferedReader(fr); 
            String line="";
             while(true){
              
                  line=br.readLine(); 
                  if(line==null) break; 
                   String[] SubResult=line.split("-");
                   result.add(new Student(SubResult[0],SubResult[1],SubResult[2],SubResult[3], Double.parseDouble(SubResult[4]),SubResult[5],SubResult[6],
                   SubResult[7],SubResult[8],SubResult[9],SubResult[10],SubResult[11],SubResult[12] ,SubResult[13]));
             
                }
            br.close();
            fr.close();
        } catch (Exception e) {
           e.printStackTrace();
        }
    }
    public static void WriteFile(List<Student> result)  throws Exception{
        try {
            FileWriter fw= new FileWriter("data.txt");
            BufferedWriter bw= new BufferedWriter(fw); 
            for(Student o: result){
                bw.write(o.toStringFile());
                bw.newLine();
            }
            bw.close();
            fw.close();
        } catch (Exception e) {
           e.printStackTrace();
        }
    }
}
////////////
////////////////////
///////////
package BTL_JAVA;

import java.util.Scanner; 
public class Person{
    protected String FullName; 
    protected String Age; 
    protected String Address; 
    protected String Gender; 
    protected String PhoneNumber; 
    protected String Identification; 
    public Person() {
    }

    public Person(String FullName, String Age, String Address, String Gender, String PhoneNumber, String Identification) {
        this.FullName = FullName;
        this.Age = Age;
        this.Address = Address;
        this.Gender = Gender;
        this.PhoneNumber = PhoneNumber;
        this.Identification = Identification;
    }

    public String getFullName() {
        return this.FullName;
    }

    public void setFullName(String FullName) {
        this.FullName = FullName;
    }

    public String getAge() {
        return this.Age;
    }

    public void setAge(String Age) {
        this.Age = Age;
    }

    public String getAddress() {
        return this.Address;
    }

    public void setAddress(String Address) {
        this.Address = Address;
    }

    public String getGender() {
        return this.Gender;
    }

    public void setGender(String Gender) {
        this.Gender = Gender;
    }

    public String getPhoneNumber() {
        return this.PhoneNumber;
    }

    public void setPhoneNumber(String PhoneNumber) {
        this.PhoneNumber = PhoneNumber;
    }

    public String getIdentification() {
        return this.Identification;
    }

    public void setIdentification(String Identification) {
        this.Identification = Identification;
    }


    @Override
    public String toString() {
        return "{" +
            " FullName='" + getFullName() + "'" +
            ", Age='" + getAge() + "'" +
            ", Address='" + getAddress() + "'" +
            ", Gender='" + getGender() + "'" +
            ", PhoneNumber='" + getPhoneNumber() + "'" +
            ", Identification='" + getIdentification()+ "'," 
        ;
    }
   public void InputPerson(){
       Scanner sc= new Scanner(System.in);
       System.out.println("Enter FullName: ");
       FullName= sc.nextLine(); 
       System.out.println("Enter Age: ");
       Age= sc.nextLine(); 
       System.out.println("Enter Address: ");
       Address= sc.nextLine(); 
       System.out.println("Enter Gender: ");
       Gender= sc.nextLine(); 
       System.out.println("Enter Identification: ");
       Identification= sc.nextLine(); 
       System.out.println("Enter PhoneNumber: ");
       PhoneNumber= sc.nextLine(); 
   }
   public void OutputPerson(){
    System.out.printf("%15s %3s %15s 5%s 15%s 15%s",FullName,Age,Address,Gender,Identification,PhoneNumber);
    }
    public String toStringFile(){
        return FullName+"-"+Age+"-"+Gender+"-"+Address+"-"+PhoneNumber+"-"+Identification;
    }
}
///////////////////
/////////////
////////////////////////
package BTL_JAVA;

import java.security.Provider;
import java.util.Scanner;

public class Student extends Person {
    private String StudentId;
    private String StatusFinancial;
    private String ScheduleSubject;
    private String ScheduleExam;
    private double GPA;
    private String StatusHealth;
    private String Vaccinate;
    private String StatusF;

    public Student() {
    }

    public Student(String FullName, String Age, String Address, String Gender, 
                   String PhoneNumber, String Identification,String StudentId, String StatusFinancial,
                   String ScheduleSubject, String ScheduleExam, double GPA,
                   String StatusHealth, String Vaccinate, String StatusF) {
        super(FullName, Age, Address, Gender, PhoneNumber, Identification);
        this.StudentId = StudentId;
        this.StatusFinancial = StatusFinancial;
        this.ScheduleSubject = ScheduleSubject;
        this.ScheduleExam = ScheduleExam;
        this.GPA = GPA;
        this.StatusHealth = StatusHealth;
        this.Vaccinate = Vaccinate;
        this.StatusF = StatusF;
    }

    public String getStudentId() {
        return this.StudentId;
    }

    public void setStudentId(String StudentId) {
        this.StudentId = StudentId;
    }

    public String getStatusFinancial() {
        return this.StatusFinancial;
    }

    public void setStatusFinancial(String StatusFinancial) {
        this.StatusFinancial = StatusFinancial;
    }

    public String getScheduleSubject() {
        return this.ScheduleSubject;
    }

    public void setScheduleSubject(String ScheduleSubject) {
        this.ScheduleSubject = ScheduleSubject;
    }

    public String getScheduleExam() {
        return this.ScheduleExam;
    }

    public void setScheduleExam(String ScheduleExam) {
        this.ScheduleExam = ScheduleExam;
    }

    public double getGPA() {
        return this.GPA;
    }

    public void setGPA(double GPA) {
        this.GPA = GPA;
    }

    public String getStatusHealth() {
        return this.StatusHealth;
    }

    public void setStatusHealth(String StatusHealth) {
        this.StatusHealth = StatusHealth;
    }

    public String getVaccinate() {
        return this.Vaccinate;
    }

    public void setVaccinate(String Vaccinate) {
        this.Vaccinate = Vaccinate;
    }

    public String getStatusF() {
        return this.StatusF;
    }

    public void setStatusF(String StatusF) {
        this.StatusF = StatusF;
    }

    @Override
    public String toString() {

        return super.toString() + "\n StudentId='" + getStudentId() + "'" + ", StatusFinancial='" + getStatusFinancial()
                + "'" + ", ScheduleSubject='" + getScheduleSubject() + "'" + ", ScheduleExam='" + getScheduleExam()
                + "'" + ", GPA='" + getGPA() + "\n'" + ", StatusHealth='" + getStatusHealth() + "'" + ", Vaccinate='"
                + getVaccinate() + "'" + ", StatusF='" + getStatusF() + "'" + "}";
    }
    
    public String toStringFile() {
        return super.toStringFile()+"-" + StudentId + "-" + GPA + "-" +ScheduleSubject+"-"+ StatusFinancial + "-" + ScheduleExam + "-"
                + Vaccinate+"-"+StatusHealth+"-"+StatusF;
    }

    public void InPutStudent() {
        super.InputPerson();
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter StudentId: ");
        StudentId = sc.nextLine();
        System.out.println("Enter StatusFinancial: ");
        StatusFinancial = sc.nextLine();
        System.out.println("Enter ScheduleSubject: ");
        ScheduleSubject = sc.nextLine();
        System.out.println("Enter ScheduleExam: ");
        ScheduleExam = sc.nextLine();
        System.out.println("Enter GPA: ");
        GPA = sc.nextDouble();
        sc.nextLine();
    }

    public void HealthDeclaration() {
        Scanner sc = new Scanner(System.in);
        System.out.println("---------Health-Declaration---------");
        System.out.println("Enter:  Your Status Health (Fever,Cough,Cold,Headache,....,Good): ");
        StatusHealth = sc.nextLine();
        System.out.println("Enter: How Many Vaccines Have You Given: ");
        Vaccinate = sc.nextLine();
        System.out.println(" Enter: Do you contact with F_patient (F1,F2,F3,F4_NONE F): ");
        StatusF = sc.nextLine();
    }
}
/////////////////////
///////////////////////
///////////////////////////
/////////////////
package BTL_JAVA;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import javax.naming.spi.DirStateFactory.Result;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedReader;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class RunMain {
    public static void main(String[] args) throws Exception{
       LogIn();
    //    Student demo1=new Student("NGUYEN XUAN QUY1","18","HANOI","MAN","01234","0020211PHONENUMBER",
    //                              "ID111","FULL","T2:MATH/T3:PHISCY","T7:EXAMMATH",7.5,
    //                              "GOOD","2","F1"
    //                              );
    //     Student demo2=new Student("NGUYEN XUAN QUY2","17","HANOI","MAN","01235","0020211PHONENUMBER",
    //                               "ID112","FULL","T2:MATH/T3:PHISCY","T7:EXAMMATH",7.6,
    //                               "BAD","3","F0"
    //     );
        Student demo3=new Student("NGUYEN XUAN QUY3","20","HANOI","MAN","01236","0020211PHONENUMBER",
                                  "ID113","FULL","T2:MATH/T3:PHISCY","T7:EXAMMATH",7.0,
                                  "FEVER","1","F4"
        );
        ManageStudent demo= new ManageStudent(); 
       demo.AddOneStudent(demo1);
       demo.AddOneStudent(demo2);
       demo.AddOneStudent(demo3);
       demo.OutPutData();
}











    
   public static void LogIn(){
       while(true){
           System.out.println("----------Enter You Account----------");
         String ID="admin";
         String PASSWORD="admin"; 
        Scanner sc= new Scanner(System.in);
        System.out.println("Enter You ID: "); 
        String newid=sc.nextLine(); 
        System.out.println("Enter Your Password: ");
        String newpass=sc.nextLine(); 
        newid= newid.trim(); 
        newpass= newpass.trim();
      
        if(ID.equals(newid) && PASSWORD.equals(newpass)){
            System.out.println("VALID ACCOUNT");
            break; 
        } 
        System.out.println("INVALILD ACCOUNT, INPUT AGAIN");
       }
   }
}
////////////////////////
////////////////////
///////////////////////